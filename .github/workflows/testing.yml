name: testing
on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [master, develop, feature/*]
  pull_request:
    branches: [master, develop]

jobs:
  test_service:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]
        postgres-version: ["15", "16"]

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pre-commit checks
        uses: pre-commit/action@v3.0.0

      - name: Install requirements
        run: |
          pip install -r service/config/requirements/ci.txt

      - name: Copy environment variables (CI requires .env file)
        run: |
          cat .testenv > .env

      - name: Ensure migrations are consistent
        run: |
          cd service
          python manage.py migrate

      - name: Run python tests
        run: |
          cd service
          python manage.py test --pattern="*_test.py"

  test_web:
    runs-on: ubuntu-latest
    strategy:
      matrix: # current + last versions
        node-version: [lts/*]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install packages
        run: |
          cd web
          pnpm install

      - name: Run linter
        run: |
          cd web
          npm run lint
